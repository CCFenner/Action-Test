name: Create new Release

on:
  repository_dispatch:
    types: perform-release
  schedule:
    - cron: '0 9 * * 1'

jobs:
  prepare:
    name: 'Determine Version'
    runs-on: ubuntu-latest
    steps:
      - run: |
          npm install semver --quiet
          echo "PIPER_version=v$(node_modules/.bin/semver -i minor $(curl --silent "https://api.github.com/repos/SAP/jenkins-library/releases/latest" | jq -r .tag_name))" >> $GITHUB_ENV
  binary:
    name: 'Publish Binary'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ['linux', 'darwin', 'win']
    steps:
      - name: Load binary
        run: |
          curl --insecure --silent --location --write-out '%{http_code}' --output ./piper_master https://github.com/SAP/jenkins-library/releases/latest/download/piper_master
#curl --insecure --silent --location --write-out '%{http_code}' --output ./piper-darwin.x86_64 https://github.com/SAP/jenkins-library/releases/latest/download/piper_master-darwin.x86_64
#curl --insecure --silent --location --write-out '%{http_code}' --output ./piper-win.x86_64.exe https://github.com/SAP/jenkins-library/releases/latest/download/piper_master-win.x86_64.exe
#cp ./piper_master ./piper
#      - run: cp ./piper_master
      - run: echo ${{ matrix.os }}
#      - uses: SAP/project-piper-action@master
#        with:
#          piper-version: master
#          command: githubPublishRelease
#          flags: --token ${{ secrets.GITHUB_TOKEN }} --assetPath ./piper_master
#      - uses: SAP/project-piper-action@master
#        with:
#          piper-version: master
#          command: githubPublishRelease
#          flags: --token ${{ secrets.GITHUB_TOKEN }} --version latest --assetPath ./piper
#      - uses: SAP/project-piper-action@master
#        with:
#          piper-version: master
#          command: githubPublishRelease
#          flags: --token ${{ secrets.GITHUB_TOKEN }} --version latest --assetPath ./piper-darwin.x86_64
#      - uses: SAP/project-piper-action@master
#        with:
#          piper-version: master
#          command: githubPublishRelease
#          flags: --token ${{ secrets.GITHUB_TOKEN }} --version latest --assetPath ./piper-win.x86_64.exe

  jar:
    name: 'Publish JAR'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          repository: https://github.com/SAP/jenkins-library.git
      # Workaround for https://github.com/SAP/jenkins-library/issues/1723, build only works with jdk8 currently
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Build and publish jar for consumption in unit tests
        run: mvn package
      - run: echo $PIPER_version
#      - uses: SAP/project-piper-action@master
#        with:
#          piper-version: master
#          command: githubPublishRelease
#          flags: --token ${{ secrets.GITHUB_TOKEN }} --version latest --assetPath ./target/jenkins-library.jar
